version: '3.8'

services:
  # Main Contract Analyzer Application for Testing
  contract-analyzer-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: contract-analyzer-test-app
    ports:
      - "8000:8000"  # Backend API
      - "8501:8501"  # Frontend Streamlit
    environment:
      # Backend Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_DEBUG=false
      - LOG_LEVEL=INFO
      
      # Database Configuration
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma
      - DATABASE_URL=sqlite:///app/data/contract_analyzer.db
      
      # AI/ML Configuration (Optional - will use mock services if not provided)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY:-}
      - LANGSMITH_PROJECT=contract-analyzer-test
      - LANGSMITH_TRACING=false
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      
      # Security Configuration (Test Values)
      - SECRET_KEY=test-secret-key-for-docker-testing-only
      - JWT_SECRET_KEY=test-jwt-secret-key-for-docker-testing-only
      - ENCRYPTION_KEY=test-encryption-key-for-docker-testing-only
      
      # Frontend Configuration
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - BACKEND_URL=http://localhost:8000
      
      # Monitoring Configuration
      - ENABLE_MONITORING=true
      - ENABLE_PROMETHEUS=true
      - ENABLE_OPENTELEMETRY=false
      
      # Security Settings
      - CORS_ORIGINS=http://localhost:8501,http://localhost:3000,http://frontend:8501
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      - MAX_FILE_SIZE_MB=50
      - ALLOWED_FILE_TYPES=pdf,doc,docx,txt
      - ENABLE_FILE_QUARANTINE=true
      - ENABLE_MALWARE_SCANNING=false
      
      # Performance Settings
      - MAX_MEMORY_MB=1024
      - MAX_CONCURRENT_ANALYSES=3
      - ANALYSIS_TIMEOUT_SECONDS=300
      
      # Feature Flags
      - ENABLE_ANALYTICS_DASHBOARD=true
      - ENABLE_REAL_TIME_MONITORING=true
      - ENABLE_WEBSOCKET_UPDATES=true
      - ENABLE_API_DOCUMENTATION=true
      
    volumes:
      # Data persistence
      - chroma_data_test:/app/data/chroma
      - temp_data_test:/app/data/temp
      - security_data_test:/app/security
      - database_data_test:/app/data
      
      # Logs
      - ./logs:/app/logs
      
      # Sample contracts for testing
      - ./sample_contracts:/app/sample_contracts:ro
      
    networks:
      - contract-analyzer-test-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: contract-analyzer-test-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data_test:/data
    networks:
      - contract-analyzer-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

networks:
  contract-analyzer-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  chroma_data_test:
    driver: local
  temp_data_test:
    driver: local
  security_data_test:
    driver: local
  redis_data_test:
    driver: local
  database_data_test:
    driver: local
