services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: contract-analyzer-backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
    volumes:
      - chroma_data:/app/data/chroma
      - ./logs/backend:/app/logs
    networks:
      - contract-analyzer-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: contract-analyzer-frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    networks:
      - contract-analyzer-network
    restart: unless-stopped
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    container_name: contract-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - contract-analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  contract-analyzer-network:
    driver: bridge

volumes:
  chroma_data:
  redis_data:
